# postgres/tasks/pgrman.yml
---
- name: Check pg_rman status
  ansible.builtin.stat:
    path: "{{ postgresql_bin_dir }}/pg_rman"
  register: pg_rman_bin

- name: Set Postgres config options pg_rman
  ansible.builtin.template:
    src: ansible_pg_rman.conf.j2
    dest: "{{ postgresql_conf_dir }}/conf.d/26ansible_pg_rman.conf"
    owner: "{{ postgresql_user_name }}"
    group: "{{ postgresql_user_name }}"
    mode: 0640
    backup: yes
  when: postgresql_pg_rman_postgres_conf is defined
  notify: Restart PostgreSQL

- name: Install pg_rman block
  block:
  - name: Download pg_rman rpm
    ansible.builtin.get_url:
      url: "https://github.com{{ lookup('url', 'https://github.com/ossc-db/pg_rman/releases', \
       split_lines=False) | regex_search('/ossc-db/pg_rman/releases/download/V.*?/pg_rman-.*?\\.pg' + \
       __postgresql_version_dotless | string + '\\.rhel' + ansible_distribution_major_version | \
       string + '\\.x86_64\\.rpm') }}"
      dest: /tmp/
      mode: 0755
    register: pg_rman_rpm

  - name: Install pg_rman
    ansible.builtin.package:
      name: "{{ pg_rman_rpm.dest }}"
      disable_gpg_check: yes
  when:
    - not pg_rman_bin.stat.exists
    - not postgresql_pg_rman_install_from_source
    - not ansible_distribution == "Ubuntu"

- name: Compile pg_rman from sources
  block:
  - name: Install requirement for compile (Redhat)
    ansible.builtin.package:
      name:
        - postgresql{{ postgresql_version | replace('.', '') }}-devel
        - make
        - gcc
        - git
        - redhat-rpm-config
        - zlib-devel
        - libselinux-devel
        - pam-devel
        - openssl-devel
        #- crypto-devel
        #- gssapi_krb5-devel
        - readline-devel
      state: present
    when: not ansible_distribution == "Ubuntu"

  - name: Postgresql contrib package name
    ansible.builtin.set_fact:
      postgresql_contrib: "{% if postgresql_version is version('9.6', '<=') %}postgresql-contrib-\
        {{ postgresql_version }}{% else %}postgresql-contrib{% endif %}"

  - name: Install requirement for compile (Ubuntu)
    ansible.builtin.package:
      name:
        - apt-utils
        - "postgresql-server-dev-{{ postgresql_version }}"
        - make
        - gcc
        - git
        - libc-dev
        - libpq-dev
        - zlib1g-dev
        - libpam-dev
        - libselinux1-dev
        - libssl-dev
        - libpam-dev
        - libedit-dev
        #- "{{ postgresql_contrib }}"
        - libssl-dev
        - libkrb5-dev
      state: present
    when: ansible_distribution == "Ubuntu"

  #- name: Add pgdg bin to path
  #  lineinfile:
  #    dest: /etc/environment
  #    state: present
  #    line: "PATH=$PATH:{{ postgresql_bin_dir }}"

  - name: Get pg_rman source
    ansible.builtin.git:
      repo: "{{ postgresql_pg_rman_git_repo }}"
      version: "REL{{ postgresql_version is version('10', '>=') | ternary('_', '') }}\
      {{ postgresql_version | replace('.', '_') }}_STABLE"
      dest: /tmp/pg_rman

  - name: Compile pg_rman stage1
    community.general.make:
      chdir: /tmp/pg_rman

  - name: Compile pg_rman stage2
    community.general.make:
      chdir: /tmp/pg_rman
      target: install

  - name: Remove pg_rman source
    ansible.builtin.file:
      path: /tmp/pg_rman
      state: absent
  when:
    - not pg_rman_bin.stat.exists
    - postgresql_pg_rman_install_from_source or ( ansible_distribution == "Ubuntu" )

- name: ARCLOG_PATH folder
  ansible.builtin.file:
    path: "{{ postgresql_home }}/{{ postgresql_version }}/arclog"
    state: directory
    owner: "{{ postgresql_user_name }}"
    group: "{{ postgresql_user_name }}"
    mode: '0700'
    setype: postgresql_db_t
    serole: object_r
    seuser: system_u

- name: Update environment variables in UNIX account postgres (pg_rman)
  ansible.builtin.blockinfile:
    create: yes
    dest: "{{ postgresql_home }}/.pgsql_profile"
    block: |
      export BACKUP_PATH="{{ postgresql_home }}/{{ postgresql_version }}/backups/rman"
      export PATH=$PATH:{{ postgresql_bin_dir }}
      export PGDATA={{ postgresql_pgdata }}
      export ARCLOG_PATH={{ postgresql_home }}/{{ postgresql_version }}/arclog
    owner: "{{ postgresql_user_name }}"
    group: "{{ postgresql_user_name }}"
    mode: 0640
    marker: "#{mark} ANSIBLE MANAGED BLOCK pg_rman"

- name: Check pg_rman init
  ansible.builtin.stat:
    path: "{{ postgresql_home }}/{{ postgresql_version }}/backups/pg_rman.ini"
  register: postgresql_pg_rman_init

- name: Ensure rman's destination folder exists
  ansible.builtin.file:
    path: "{{ postgresql_home }}/{{ postgresql_version }}/backups/rman"
    state: directory
    mode: '0700'
    owner: "{{ postgresql_user_name }}"
    group: "{{ postgresql_user_name }}"

- name: Init pg_rman
  ansible.builtin.shell: "{{ postgresql_bin_dir }}/pg_rman init -B \
  {{ postgresql_home }}/{{ postgresql_version }}/backups/rman -D {{ postgresql_pgdata }}"
  become_user: "{{ postgresql_user_name }}"
  when: not postgresql_pg_rman_init.stat.exists

- name: PG_rman ini parameters
  community.general.ini_file:
    path: "{{ postgresql_home }}/{{ postgresql_version }}/backups/pg_rman.ini"
    section:
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    mode: 0640
    owner: "{{ postgresql_user_name }}"
    group: "{{ postgresql_user_name }}"
  loop: "{{ postgresql_pg_rman_ini }}"
  when: postgresql_pg_rman_ini is defined
#

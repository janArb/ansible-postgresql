---
- name: Ensure user has got access to the database
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ item.name }}"
    name: "{{ item.user }}"
    password: "{{ item.password | default(omit) }}"
    priv: "{{ item.priv | default('ALL') }}"
    ssl_mode: "{{ item.ssl_mode | default(omit) }}"
    state: present
  loop: "{{ postgresql_dbs }}"
  environment:
    PGOPTIONS: "{{ (postgresql_network_password_mode == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', omit) }}"
  no_log: true
  when:
    - postgresql_dbs is defined
    - not init_replication
  notify: Reload PostgreSQL


- name: Ensure standard users has not got unnecessary privileges
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ item.user }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    state: present
  loop: "{{ postgresql_dbs }}"
  no_log: true
  when:
    - postgresql_dbs is defined
    - not init_replication
  notify: Reload PostgreSQL

- name: Create global users
  become: true
  become_user: postgres
  postgresql_user:
    name: "{{ item.user }}"
    password: "{{ item.password | default(omit) }}"
    role_attr_flags: "{{ item.role_attr_flags }}"
    ssl_mode: "{{ item.ssl_mode | default(omit) }}"
    state: present
  loop: "{{ postgresql_global_users }}"
  environment:
    PGOPTIONS: "{{ (postgresql_network_password_mode == 'scram-sha-256') | ternary('-c password_encryption=scram-sha-256', omit) }}"
  no_log: true
  when:
    - postgresql_global_users is defined
    - not init_replication
  notify: Reload PostgreSQL

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers